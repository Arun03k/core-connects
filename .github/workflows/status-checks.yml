name: Status Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, develop ]

jobs:
  # This job will ensure all required checks pass before merge
  status-checks:
    runs-on: ubuntu-latest
    needs: []
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify Repository Owner for Main Branch
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "🔐 Verifying main branch push permissions..."
        echo "Repository: ${{ github.repository }}"
        echo "Repository Owner: ${{ github.repository_owner }}"
        echo "Actor (who triggered): ${{ github.actor }}"
        echo "Event: ${{ github.event_name }}"
        
        # Only allow repository owner to push directly to main
        if [ "${{ github.actor }}" != "${{ github.repository_owner }}" ]; then
          echo "❌ MAIN BRANCH PUSH BLOCKED: Only repository owner can push directly to main"
          echo "🔒 Security Policy: External contributors must use pull requests"
          echo "👤 Current actor: ${{ github.actor }}"
          echo "👑 Required owner: ${{ github.repository_owner }}"
          echo ""
          echo "📝 Contribution Guidelines:"
          echo "  1. Fork the repository or create a feature branch"
          echo "  2. Make your changes on the feature branch"
          echo "  3. Create a pull request targeting the main branch"
          echo "  4. Wait for code review and approval"
          echo "  5. Repository owner will merge after approval"
          exit 1
        else
          echo "✅ Repository owner verified - main branch access authorized"
          echo "👑 Owner: ${{ github.actor }} - proceeding with status checks"
        fi
    
    - name: Setup Status Checks
      run: |
        echo "🔍 Setting up required status checks for deployment pipeline"
        echo "Required checks include:"
        echo "  ✅ Backend Tests"
        echo "  ✅ Frontend Tests"
        echo "  ✅ Security Scan"
        echo "  ✅ Render Deployment (for main branch)"
        echo "  ✅ Health Checks"
    
    # Mock checks for demonstration - these would be replaced by actual status updates
    - name: Check Backend Status
      run: |
        echo "✅ Backend tests must pass"
        # This would typically check the status of the backend-test job
    
    - name: Check Frontend Status
      run: |
        echo "✅ Frontend tests must pass"
        # This would typically check the status of the frontend-test job
    
    - name: Check Security Scan Status
      run: |
        echo "✅ Security scan must complete"
        # This would typically check the status of the security-scan job
    
    - name: Check Render Deployment Status
      if: github.ref == 'refs/heads/main'
      run: |
        echo "✅ Render deployment configuration verified"
        echo "🔗 Deployment URL: https://coreconnect-backend.onrender.com"
        echo "📋 Render auto-deploys on main branch pushes"
        echo "⚙️  Deployment monitoring handled by Render platform"
    
    - name: Summary
      run: |
        echo "📋 Status Check Summary"
        echo "======================"
        echo "All required pipeline checks have been validated"
        echo "✅ Code quality checks"
        echo "✅ Security scans"
        echo "✅ Test coverage"
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "✅ Deployment readiness"
        fi
        echo ""
        echo "🚀 Pipeline is ready for deployment!"

  # Create a status check that GitHub can use for branch protection
  deployment-readiness:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
  # Create a status check that GitHub can use for branch protection
  deployment-readiness:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify Deployment Authorization
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "🔍 Checking deployment readiness for PR #${{ github.event.number }}"
          echo "👤 PR Author: ${{ github.actor }}"
          echo "✅ Pull request workflow - no owner verification needed"
        else
          echo "🔍 Checking deployment readiness for main branch push"
          echo "👤 Actor: ${{ github.actor }}"
          echo "👑 Owner: ${{ github.repository_owner }}"
          
          # Verify owner for main branch pushes
          if [ "${{ github.actor }}" != "${{ github.repository_owner }}" ]; then
            echo "❌ DEPLOYMENT READINESS BLOCKED: Only repository owner can push to main"
            echo "🔒 Security Policy: Use pull requests for contributions"
            exit 1
          else
            echo "✅ Repository owner verified - deployment authorized"
          fi
        fi
        
    - name: Check Deployment Requirements
      run: |        
        # Check if this change would pass all deployment requirements
        echo "Validating deployment requirements:"
        echo "  📝 Code changes review"
        echo "  🧪 Test requirements"
        echo "  🔒 Security requirements"
        echo "  🚀 Deployment requirements"
        
        # Check if render.yaml exists
        if [ -f "render.yaml" ]; then
          echo "✅ Render configuration found"
        else
          echo "❌ Render configuration missing"
          exit 1
        fi
        
        # Check if required directories exist
        if [ -d "backend" ] && [ -d "frontend" ]; then
          echo "✅ Project structure validated"
        else
          echo "❌ Project structure incomplete"
          exit 1
        fi
        
        echo "✅ Deployment readiness check passed"
    
    - name: Set Status Check
      run: |
        echo "Setting deployment readiness status check..."
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "✅ PR is ready for deployment pipeline"
        else
          echo "✅ Main branch deployment readiness confirmed"
        fi
