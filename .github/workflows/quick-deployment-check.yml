name: Quick Deployment Verification

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Run every 6 hours to verify deployment health
    - cron: '0 */6 * * *'

jobs:
  verify-deployment:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Quick Health Check
      id: health_check
      run: |
        echo "⚡ Quick deployment verification"
        echo "🔗 Checking: https://coreconnect-backend.onrender.com"
        
        # Quick health check with short timeout
        if curl -f -s --connect-timeout 5 --max-time 15 https://coreconnect-backend.onrender.com/health > /dev/null 2>&1; then
          echo "✅ Render deployment is healthy"
          echo "status=healthy" >> $GITHUB_OUTPUT
        else
          echo "❌ Render deployment health check failed"
          echo "status=unhealthy" >> $GITHUB_OUTPUT
          
          # Try to get more info about the failure
          echo "🔍 Attempting to get error details..."
          curl_output=$(curl -s --connect-timeout 5 --max-time 15 https://coreconnect-backend.onrender.com/health 2>&1) || true
          echo "Response: $curl_output"
          exit 1
        fi
    
    - name: Verify API Endpoints
      if: steps.health_check.outputs.status == 'healthy'
      run: |
        echo "🧪 Testing API endpoints..."
        
        # Test basic endpoints
        endpoints=(
          "/"
          "/health"
          "/api/health"
          "/api/status"
        )
        
        for endpoint in "${endpoints[@]}"; do
          echo "Testing $endpoint..."
          response_code=$(curl -s -w "%{http_code}" -o /dev/null https://coreconnect-backend.onrender.com$endpoint)
          
          if [ "$response_code" = "200" ]; then
            echo "✅ $endpoint - OK"
          else
            echo "❌ $endpoint - Failed (HTTP $response_code)"
            exit 1
          fi
        done
        
        echo "🎉 All API endpoints are responding correctly!"
    
    - name: Performance Check
      if: steps.health_check.outputs.status == 'healthy'
      run: |
        echo "⚡ Checking response performance..."
        
        # Measure response time
        response_time=$(curl -s -w "%{time_total}" -o /dev/null https://coreconnect-backend.onrender.com/health)
        response_time_ms=$(echo "$response_time * 1000" | bc -l | cut -d. -f1)
        
        echo "Response time: ${response_time_ms}ms"
        
        if [ "$response_time_ms" -lt 3000 ]; then
          echo "✅ Performance is good (${response_time_ms}ms)"
        elif [ "$response_time_ms" -lt 8000 ]; then
          echo "⚠️  Performance is acceptable but slow (${response_time_ms}ms)"
        else
          echo "❌ Performance is poor (${response_time_ms}ms)"
          exit 1
        fi
    
    - name: Deployment Status Summary
      if: always()
      run: |
        echo "📊 Quick Deployment Verification Summary"
        echo "======================================="
        echo "🌐 Service: https://coreconnect-backend.onrender.com"
        echo "⏰ Check time: $(date)"
        echo "🔍 Trigger: ${{ github.event_name }}"
        
        if [ "${{ steps.health_check.outputs.status }}" = "healthy" ]; then
          echo "✅ Status: All systems operational"
          echo "🚀 Ready to serve traffic"
        else
          echo "❌ Status: Deployment issues detected"
          echo "🚨 Investigation required"
        fi
