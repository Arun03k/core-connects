version: '3.8'

services:
  # Backend service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: coreconnect-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - SECRET_KEY=docker-development-secret-key
      - JWT_SECRET_KEY=docker-development-jwt-secret-key
      - PORT=5000
      - API_VERSION=v1
      - MONGO_URI=mongodb://mongodb:27017/coreconnect
      - MONGO_DBNAME=coreconnect
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coreconnect-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: coreconnect-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: coreconnect
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  mongodb_data:
