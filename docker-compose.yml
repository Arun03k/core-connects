version: '3.8'

services:
  # Backend service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: coreconnect-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - SECRET_KEY=docker-development-secret-key
      - PORT=5000
      - API_VERSION=v1
    volumes:
      - ./backend:/app
      - /app/__pycache__
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coreconnect-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development database (optional)
  # Uncomment when you need a database
  # db:
  #   image: postgres:15-alpine
  #   container_name: coreconnect-db
  #   environment:
  #     POSTGRES_DB: coreconnect
  #     POSTGRES_USER: coreconnect
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

# volumes:
#   postgres_data:
